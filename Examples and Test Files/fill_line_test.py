def fill_line(vals, interval, channel):
    """
    Backfill resistance values at every timestep in every channel. Necessary
    for smooth fill_between() on final graph.
    Args:
        vals (dict float): dictionary of values per channel
        interval (list int): the time interval to be filled
        channel (int): the channel to be updated, the index of self.lines 
    Returns:
        list (float): completed interval of resistances in channel
    """

    startx, endx = interval[0],interval[-1]
    print 'channel: %d, start time: %d, endtime: %d' %(channel, startx, endx)
    startval, endval = vals[channel][startx], vals[channel][endx]
    print 'start_y: %f, end_y: %f' % (startval, endval)
    slope = float(endval - startval) / (endx - startx)
    print 'slope: %f, over the interval: %r' %(slope, interval)

    filled_line = [0 for _ in xrange(9)]
    filled_line[0] = startval
    for i in xrange(1, 9):
        delta_x = interval[i] - interval[i - 1]
        filled_line[i] = filled_line[i - 1] + slope * delta_x

    return filled_line



vals = [{0: 0.0, 278657: 4478.9, 372866: 22781.14, 201860: 426.52, 442241: 19581.0, 257033: 1629.45, 222860: 552.81, 305677: 12962.5, 527745: 19581.0, 601688: 20675.78, 54803: 0.0, 420887: 20675.78, 124164: 437.45, 192284: 426.52, 488538: 21892.21, 150563: 433.06, 175140: 435.25, 330213: 20675.78, 591641: 21471.99, 502450: 21892.21, 89006: 402.96, 364210: 22781.14, 79155: 0.0, 553268: 19240.0, 215990: 492.02, 50361: 0.0, 597180: 21066.78, 347713: 21892.21, 302403: 11515.31, 235190: 751.66, 102218: 428.69, 17355: 0.0, 314701: 16609.43, 140366: 430.87, 451917: 19933.55, 94288: 413.59, 675665: 17980.92, 627897: 21066.78, 480897: 19240.0, 570585: 17980.92, 166490: 435.25, 584985: 22781.14, 615901: 19581.0, 32950: 0.0, 514788: 20675.78, 287334: 7270.2, 129510: 437.45, 665105: 18910.0, 394985: 22328.29, 467435: 18910.0, 390530: 22328.29, 657649: 18910.0, 532724: 20298.27, 408309: 21471.99, 651901: 18590.47}, {578432: 23.09, 308099: 23.09, 601963: 23.09, 131982: 23.09, 421136: 23.09, 55057: 0.0, 89262: 23.09, 203674: 23.09, 94537: 23.09, 665360: 23.09, 585249: 23.09, 224678: 23.09, 553513: 23.09, 179370: 23.09, 216238: 23.09, 395229: 23.09, 79410: 0.0, 282292: 23.09, 364469: 23.09, 50614: 0.0, 102473: 23.09, 302649: 23.09, 502716: 23.09, 235456: 23.09, 484547: 23.09, 442489: 23.09, 452165: 23.09, 314950: 23.09, 3273: 0.0, 140618: 23.09, 628148: 23.09, 675918: 23.09, 166737: 23.09, 408953: 23.09, 467684: 23.09, 597469: 23.09, 153565: 23.09, 657899: 23.09, 493536: 23.09, 591888: 23.09, 527994: 23.09, 330468: 23.09, 257681: 23.09, 515037: 23.09, 375911: 23.09, 535825: 23.09, 616174: 23.09, 351613: 23.09, 652152: 23.09, 390777: 23.09, 20346: 0.0, 287611: 23.09, 33194: 0.0, 124414: 23.09, 192533: 23.09}, {676168: 23.09, 536068: 23.09, 132230: 23.09, 452417: 24.33, 652408: 23.09, 55305: 0.0, 467933: 23.09, 102722: 23.09, 257935: 23.09, 303888: 23.09, 421393: 23.09, 192781: 23.09, 282542: 23.09, 89516: 23.09, 125062: 23.09, 351911: 23.09, 325801: 23.09, 216875: 23.09, 50860: 0.0, 290989: 23.09, 80046: 0.0, 153821: 23.09, 660344: 23.09, 665608: 23.09, 593737: 23.09, 630388: 23.09, 446125: 23.09, 3522: 0.0, 557740: 23.09, 140869: 23.09, 239686: 23.09, 37447: 0.0, 94792: 23.09, 179621: 23.09, 330717: 23.09, 506446: 23.09, 203917: 23.09, 364717: 23.09, 398418: 23.09, 376157: 23.09, 391033: 23.09, 170973: 23.09, 597726: 23.09, 224933: 23.09, 493792: 23.09, 604536: 23.09, 587750: 23.09, 578681: 23.09, 515306: 23.09, 20594: 0.0, 484801: 23.09, 409205: 23.09, 617440: 23.09, 528248: 23.09, 308345: 23.09}, {660608: 18910.0, 308613: 14988.57, 669353: 18280.93, 136461: 503.84, 24849: 0.0, 425109: 19581.0, 528534: 19240.0, 468185: 18910.0, 604825: 19240.0, 304155: 12494.95, 225182: 662.44, 486021: 21471.99, 217121: 583.55, 291237: 7758.85, 80294: 0.0, 51111: 0.0, 416425: 19933.55, 557996: 17980.92, 676421: 18590.47, 454831: 19933.55, 617692: 18910.0, 282807: 5383.49, 593979: 19581.0, 239932: 950.54, 141122: 506.22, 89795: 487.33, 506693: 19581.0, 110662: 513.42, 540329: 19933.55, 58443: 0.0, 398669: 21066.78, 95054: 494.37, 258189: 1772.95, 356176: 21892.21, 37716: 0.0, 446373: 18590.47, 171226: 511.01, 377423: 21471.99, 494044: 21892.21, 125306: 515.83, 183902: 511.01, 364965: 21892.21, 588000: 20298.27, 196449: 499.09, 7139: 0.0, 597990: 19933.55, 330982: 21066.78, 326055: 18590.47, 630638: 20298.27, 578928: 21066.78, 158069: 511.01, 391287: 20675.78, 652664: 19581.0, 519033: 19581.0, 205178: 506.22}, {676664: 45004.49, 7425: 0.0, 136713: 535.36, 25101: 0.0, 365229: 50782.55, 529680: 32511.38, 304405: 15645.67, 171865: 545.29, 127769: 552.81, 669596: 35487.68, 398917: 46782.35, 84550: 0.0, 540585: 31623.72, 252586: 1271.14, 455084: 37781.91, 217773: 601.99, 588253: 30781.51, 283057: 4989.25, 416692: 41816.59, 51383: 0.0, 594236: 30781.51, 90041: 515.83, 110908: 545.29, 227673: 685.44, 450625: 37781.91, 58690: 0.0, 356421: 48702.45, 95302: 527.98, 494297: 33448.37, 291918: 8235.0, 606032: 45004.49, 652920: 27804.63, 377683: 50782.55, 558252: 37781.91, 184153: 542.8, 425359: 40382.04, 634844: 31623.72, 196701: 532.89, 261029: 1716.61, 144865: 537.83, 331235: 37781.91, 583269: 30781.51, 507324: 37781.91, 327917: 34438.89, 598255: 41816.59, 660857: 41816.59, 519292: 34438.89, 205428: 532.89, 158326: 540.31, 621944: 34438.89, 391545: 48702.45, 41338: 0.0, 486268: 32511.38, 471933: 34438.89, 308863: 19240.0}, {381315: 40382.04, 187780: 475.73, 357000: 36600.03, 121154: 478.04, 497453: 29220.46, 136977: 468.85, 304661: 8685.24, 128022: 480.35, 261273: 1342.75, 672644: 31623.72, 162588: 475.73, 218021: 523.1, 606313: 32511.38, 558504: 29220.46, 252841: 1045.08, 416941: 41816.59, 283311: 3039.59, 507568: 28495.69, 51633: 0.0, 529933: 30781.51, 519546: 32511.38, 95550: 459.76, 399167: 40382.04, 292161: 4478.9, 84802: 0.0, 544837: 31623.72, 93254: 455.25, 450889: 35487.68, 455371: 34438.89, 172111: 475.73, 227920: 604.65, 622200: 32511.38, 196946: 466.57, 600659: 32511.38, 588500: 34438.89, 391801: 40382.04, 635096: 29981.47, 145114: 471.14, 656143: 37781.91, 429024: 39040.04, 62941: 0.0, 365477: 39040.04, 328160: 19933.55, 583521: 35487.68, 331485: 22328.29, 26341: 0.0, 487529: 29981.47, 684656: 29220.46, 213873: 499.09, 472183: 32511.38, 41592: 0.0, 309113: 10444.12, 7674: 0.0, 596136: 32511.38, 661116: 36600.03}, {188033: 466.57, 672900: 23251.75, 656391: 22781.14, 338704: 48702.45, 128273: 473.43, 162838: 464.29, 304919: 23251.75, 221080: 599.33, 296990: 17407.76, 596385: 28495.69, 647750: 22328.29, 583793: 27804.63, 417192: 41816.59, 283561: 7889.93, 97450: 455.25, 497707: 35487.68, 51884: 0.0, 172765: 466.57, 622456: 25911.72, 15542: 0.0, 253495: 1675.73, 588748: 29220.46, 531932: 32511.38, 661365: 24250.6, 455617: 39040.04, 451141: 40382.04, 228166: 706.02, 381561: 43353.61, 600908: 29220.46, 407113: 43353.61, 121399: 471.14, 93516: 441.86, 368720: 46782.35, 567633: 32511.38, 429277: 39040.04, 545107: 29981.47, 269689: 3525.48, 328409: 41816.59, 63195: 0.0, 487772: 37781.91, 200669: 455.25, 26590: 0.0, 608736: 28495.69, 394209: 46782.35, 684900: 24781.24, 214121: 525.54, 519805: 36600.03, 309361: 27804.63, 137240: 453.0, 510633: 41816.59, 41848: 0.0, 86649: 437.45, 149370: 462.02, 472443: 46782.35, 357245: 48702.45}, {188293: 300.17, 149639: 300.17, 622731: 298.32, 221324: 300.17, 673577: 298.32, 656655: 298.32, 163089: 300.17, 520057: 298.32, 312597: 300.17, 297238: 300.17, 596632: 298.32, 137500: 300.17, 417437: 298.32, 584041: 298.32, 338977: 300.17, 510882: 298.32, 52134: 0.0, 501928: 298.32, 97705: 300.17, 71645: 0.0, 86898: 302.02, 214365: 300.17, 253745: 300.17, 15797: 0.0, 648005: 298.32, 549961: 298.32, 360898: 298.32, 686148: 298.32, 601157: 298.32, 93766: 300.17, 122056: 300.17, 451401: 298.32, 488017: 298.32, 589004: 298.32, 233678: 300.17, 286799: 300.17, 368976: 298.32, 173009: 300.17, 567891: 298.32, 407380: 298.32, 433529: 298.32, 305174: 300.17, 608988: 298.32, 200925: 300.17, 532192: 298.32, 394465: 298.32, 128529: 300.17, 329705: 300.17, 661613: 298.32, 269938: 300.17, 472693: 300.17, 463529: 298.32, 390009: 298.32, 42106: 0.0, 29053: 0.0}, {222595: 511.01, 433796: 53043.53, 615644: 40382.04, 656904: 35487.68, 305417: 20675.78, 188554: 417.87, 256781: 1301.33, 664848: 37781.91, 347408: 45004.49, 54545: 0.0, 297491: 8845.0, 596885: 45004.49, 584728: 41816.59, 312860: 23741.19, 174877: 417.87, 589255: 43353.61, 150303: 415.73, 163360: 417.87, 601414: 45004.49, 532444: 50782.55, 287047: 4958.51, 502188: 50782.55, 463773: 53043.53, 88752: 373.95, 29299: 0.0, 361144: 50782.55, 686396: 36600.03, 122302: 422.18, 101953: 415.73, 17091: 0.0, 451653: 55510.05, 550213: 46782.35, 94023: 392.48, 488264: 53043.53, 233934: 653.96, 420624: 55510.05, 480633: 53043.53, 71898: 0.0, 394716: 58211.48, 514525: 48702.45, 214622: 453.0, 329953: 36600.03, 627640: 39040.04, 129253: 422.18, 408038: 55510.05, 137745: 411.45, 570332: 45004.49, 42355: 0.0, 520308: 48702.45, 201590: 402.96, 673833: 35487.68, 651640: 34438.89, 278393: 3143.85, 390268: 55510.05, 372605: 55510.05}]
all_times = [0, 3273, 3522, 7139, 7425, 7674, 15542, 15797, 17091, 17355, 20346, 20594, 24849, 25101, 26341, 26590, 29053, 29299, 32950, 33194, 37447, 37716, 41338, 41592, 41848, 42106, 42355, 50361, 50614, 50860, 51111, 51383, 51633, 51884, 52134, 54545, 54803, 55057, 55305, 58443, 58690, 62941, 63195, 71645, 71898, 79155, 79410, 80046, 80294, 84550, 84802, 86649, 86898, 88752, 89006, 89262, 89516, 89795, 90041, 93254, 93516, 93766, 94023, 94288, 94537, 94792, 95054, 95302, 95550, 97450, 97705, 101953, 102218, 102473, 102722, 110662, 110908, 121154, 121399, 122056, 122302, 124164, 124414, 125062, 125306, 127769, 128022, 128273, 128529, 129253, 129510, 131982, 132230, 136461, 136713, 136977, 137240, 137500, 137745, 140366, 140618, 140869, 141122, 144865, 145114, 149370, 149639, 150303, 150563, 153565, 153821, 158069, 158326, 162588, 162838, 163089, 163360, 166490, 166737, 170973, 171226, 171865, 172111, 172765, 173009, 174877, 175140, 179370, 179621, 183902, 184153, 187780, 188033, 188293, 188554, 192284, 192533, 192781, 196449, 196701, 196946, 200669, 200925, 201590, 201860, 203674, 203917, 205178, 205428, 213873, 214121, 214365, 214622, 215990, 216238, 216875, 217121, 217773, 218021, 221080, 221324, 222595, 222860, 224678, 224933, 225182, 227673, 227920, 228166, 233678, 233934, 235190, 235456, 239686, 239932, 252586, 252841, 253495, 253745, 256781, 257033, 257681, 257935, 258189, 261029, 261273, 269689, 269938, 278393, 278657, 282292, 282542, 282807, 283057, 283311, 283561, 286799, 287047, 287334, 287611, 290989, 291237, 291918, 292161, 296990, 297238, 297491, 302403, 302649, 303888, 304155, 304405, 304661, 304919, 305174, 305417, 305677, 308099, 308345, 308613, 308863, 309113, 309361, 312597, 312860, 314701, 314950, 325801, 326055, 327917, 328160, 328409, 329705, 329953, 330213, 330468, 330717, 330982, 331235, 331485, 338704, 338977, 347408, 347713, 351613, 351911, 356176, 356421, 357000, 357245, 360898, 361144, 364210, 364469, 364717, 364965, 365229, 365477, 368720, 368976, 372605, 372866, 375911, 376157, 377423, 377683, 381315, 381561, 390009, 390268, 390530, 390777, 391033, 391287, 391545, 391801, 394209, 394465, 394716, 394985, 395229, 398418, 398669, 398917, 399167, 407113, 407380, 408038, 408309, 408953, 409205, 416425, 416692, 416941, 417192, 417437, 420624, 420887, 421136, 421393, 425109, 425359, 429024, 429277, 433529, 433796, 442241, 442489, 446125, 446373, 450625, 450889, 451141, 451401, 451653, 451917, 452165, 452417, 454831, 455084, 455371, 455617, 463529, 463773, 467435, 467684, 467933, 468185, 471933, 472183, 472443, 472693, 480633, 480897, 484547, 484801, 486021, 486268, 487529, 487772, 488017, 488264, 488538, 493536, 493792, 494044, 494297, 497453, 497707, 501928, 502188, 502450, 502716, 506446, 506693, 507324, 507568, 510633, 510882, 514525, 514788, 515037, 515306, 519033, 519292, 519546, 519805, 520057, 520308, 527745, 527994, 528248, 528534, 529680, 529933, 531932, 532192, 532444, 532724, 535825, 536068, 540329, 540585, 544837, 545107, 549961, 550213, 553268, 553513, 557740, 557996, 558252, 558504, 567633, 567891, 570332, 570585, 578432, 578681, 578928, 583269, 583521, 583793, 584041, 584728, 584985, 585249, 587750, 588000, 588253, 588500, 588748, 589004, 589255, 591641, 591888, 593737, 593979, 594236, 596136, 596385, 596632, 596885, 597180, 597469, 597726, 597990, 598255, 600659, 600908, 601157, 601414, 601688, 601963, 604536, 604825, 606032, 606313, 608736, 608988, 615644, 615901, 616174, 617440, 617692, 621944, 622200, 622456, 622731, 627640, 627897, 628148, 630388, 630638, 634844, 635096, 647750, 648005, 651640, 651901, 652152, 652408, 652664, 652920, 656143, 656391, 656655, 656904, 657649, 657899, 660344, 660608, 660857, 661116, 661365, 661613, 664848, 665105, 665360, 665608, 669353, 669596, 672644, 672900, 673577, 673833, 675665, 675918, 676168, 676421, 676664, 684656, 684900, 686148, 686396]
complete_data = [[] for _ in xrange(9)]

index = 0
for channel in xrange(1):
    index = channel
    for i in xrange((len(all_times))):
        try:
            interval = all_times[index:index+10]
            if len(interval) != 10  :
                break
            filled_line = fill_line(vals, interval, channel)
            print filled_line
            complete_data[channel].extend(filled_line)
            index += 9
        except KeyError:
            print i
            break


print complete_data
# print len(complete_data[0]) == len(complete_data[1])